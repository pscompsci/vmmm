@page "/fetchdata"
@inject HttpClient Http

<h1>Virtual Machine List</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (vms is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Parent</th>
                <th>Network</th>
                <th>Operating System</th>
                <th>IP Address</th>
                <th>CPU</th>
                <th>Memory</th>
                <th>Disk Type</th>
                <th>Disk Capacity</th>
                <th>Disk Free Space</th>
                <th>State</th>
                <th>Overall Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vm in vms)
            {
                <tr>
                    <td>@vm.Name</td>
                    <td>@vm.Parent</td>
                    <td>@vm.Network</td>
                    <td>@vm.OperatingSystem</td>
                    <td>@vm.IPAddress</td>
                    <td>@vm.CPU</td>
                    <td>@vm.Memory</td>
                    <td>@vm.DiskType</td>
                    <td>@vm.DiskCapacity</td>
                    <td>@vm.DiskFreeSpace</td>
                    <td>@vm.State</td>
                    <td>@vm.OverallStatus</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public VM[] vms;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Remove magic url. Put in config for project when created
        vms = await Http.GetFromJsonAsync<VM[]>("http://localhost:3001");
    }
    public class VM
    {
        public string Name { get; set; } = string.Empty;
        public string Parent { get; set; } = string.Empty;
        public string Network { get; set; } = string.Empty;
        public string OperatingSystem { get; set; } = string.Empty;
        public string IPAddress { get; set; } = string.Empty;
        public int CPU { get; set; }
        public int Memory { get; set; }
        public string DiskType { get; set; } = string.Empty;
        public int DiskCapacity { get; set; }
        public int DiskFreeSpace { get; set; }
        public string State { get; set; } = string.Empty;
        public string OverallStatus { get; set; } = string.Empty;
    }
}
